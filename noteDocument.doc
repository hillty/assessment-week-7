STEP 1 - 3
|     ARRAYS      |       INSERT      |      APPEND      | 
| extraLargeArray | 767.744292 ms     | 3.490167 ms      |
| largeArray      | 6.354792 ms       | 414.959 μs       |
| mediumArray     | 133.083 μs        | 79.917 μs        |
| smallArray      | 89.583 μs         | 55.959 μs        |
| tinyArray       | 27.875 μs         | 51.959 μs        |

STEP 1 - 4
the pattern i see is that the runtime slowly decreases with the size of the array. the append function scales better because as you increase the size of the array, the amount of time it takes to run remains more or less constant in growing time. whereas the insert function you can see starts to shoot up exponentially as the array grows in size and is not a linear increase to the time it takes to run.

STEP 1 - 5
unshift pushes the number to the beginning of the array, which in turn will make all of the other numbers in the array shift one element taking time to do so. whereas push will simply add the number to the end and the rest keep the same element index.